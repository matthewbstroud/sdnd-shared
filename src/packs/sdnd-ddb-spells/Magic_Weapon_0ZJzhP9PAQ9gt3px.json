{
  "type": "spell",
  "system": {
    "description": {
      "value": "<div class=\"ddb\">\n<p>You touch a nonmagical weapon. Until the spell ends, that weapon becomes a magic weapon with a +1 bonus to attack rolls and damage rolls.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 4th level or higher, the bonus increases to +2. When you use a spell slot of 6th level or higher, the bonus increases to +3.</p>\n</div>",
      "chat": ""
    },
    "source": {
      "book": "Playerâ€™s Handbook",
      "page": "257",
      "license": "",
      "custom": ""
    },
    "activation": {
      "type": "bonus",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": "1",
      "units": "hour"
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": null,
      "units": "",
      "type": "",
      "width": null,
      "prompt": true
    },
    "range": {
      "value": null,
      "long": null,
      "units": "touch"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": "",
      "prompt": true
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null,
      "scale": false
    },
    "ability": "",
    "actionType": "util",
    "attack": {
      "bonus": "",
      "flat": false
    },
    "chatFlavor": "[bludgeoning] Weapon Damage Type - bludgeoning, piercing, or slashing, [piercing] Weapon Damage Type - bludgeoning, piercing, or slashing, [slashing] Weapon Damage Type - bludgeoning, piercing, or slashing",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "summons": null,
    "level": 2,
    "school": "trs",
    "properties": [
      "vocal",
      "somatic",
      "concentration"
    ],
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    }
  },
  "name": "Magic Weapon",
  "flags": {
    "ddbimporter": {
      "id": 138452,
      "definitionId": 2178,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "originalName": "Magic Weapon",
      "sources": [
        {
          "sourceId": 1,
          "pageNumber": null,
          "sourceType": 2
        },
        {
          "sourceId": 2,
          "pageNumber": 257,
          "sourceType": 1
        }
      ],
      "tags": [
        "Buff"
      ],
      "version": "5.1.27",
      "effectsApplied": true
    },
    "midi-qol": {
      "removeAttackDamageButtons": "default",
      "forceCEOff": true
    },
    "midiProperties": {
      "confirmTargets": "default",
      "magicdam": true,
      "magiceffect": true
    },
    "dae": {
      "macro": {
        "name": "Magic Weapon",
        "type": "script",
        "scope": "global",
        "command": "const lastArg = args[args.length - 1];\nconst tokenOrActor = await fromUuid(lastArg.actorUuid);\nconst targetActor = tokenOrActor.actor ? tokenOrActor.actor : tokenOrActor;\n\nfunction valueLimit(val, min, max) {\n  return val < min ? min : val > max ? max : val;\n}\n\n/**\n * Select for weapon and apply bonus based on spell level\n */\nif (args[0] === \"on\") {\n  const weapons = targetActor.items.filter((i) => i.type === \"weapon\");\n  let weaponContent = \"\";\n\n  // Filter for weapons\n  weapons.forEach((weapon) => {\n    weaponContent += `<label class=\"radio-label\">\n  <input type=\"radio\" name=\"weapon\" value=\"${weapon.id}\">\n  <img src=\"${weapon.img}\" style=\"border:0px; width: 50px; height:50px;\">\n  ${weapon.name}\n</label>`;\n  });\n\n  const content = `\n    <style>\n    .magicWeapon .form-group {\n        display: flex;\n        flex-wrap: wrap;\n        width: 100%;\n        align-items: flex-start;\n      }\n\n      .magicWeapon .radio-label {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n        justify-items: center;\n        flex: 1 0 25%;\n        line-height: normal;\n      }\n\n      .magicWeapon .radio-label input {\n        display: none;\n      }\n\n      .magicWeapon img {\n        border: 0px;\n        width: 50px;\n        height: 50px;\n        flex: 0 0 50px;\n        cursor: pointer;\n      }\n\n      /* CHECKED STYLES */\n      .magicWeapon [type=radio]:checked + img {\n        outline: 2px solid #f00;\n      }\n    </style>\n    <form class=\"magicWeapon\">\n      <div class=\"form-group\" id=\"weapons\">\n          ${weaponContent}\n      </div>\n    </form>\n`;\n\n  new Dialog({\n    content,\n    buttons: {\n      ok: {\n        label: `Ok`,\n        callback: () => {\n          const itemId = $(\"input[type='radio'][name='weapon']:checked\").val();\n          const weaponItem = targetActor.items.get(itemId);\n          let copyItem = foundry.utils.duplicate(weaponItem);\n          const spellLevel = Math.floor(args[1] / 2);\n          const bonus = valueLimit(spellLevel, 1, 3);\n          const wpDamage = copyItem.system.damage.parts[0][0];\n          const verDamage = copyItem.system.damage.versatile;\n          DAE.setFlag(targetActor, \"magicWeapon\", {\n            damage: weaponItem.system.attack.bonus,\n            weapon: itemId,\n            weaponDmg: wpDamage,\n            verDmg: verDamage,\n            mgc: copyItem.system.properties.includes(\"mgc\"),\n          });\n          if (copyItem.system.attack.bonus === \"\") copyItem.system.attack.bonus = \"0\";\n          copyItem.system.attack.bonus = `${parseInt(copyItem.system.attack.bonus) + bonus}`;\n          copyItem.system.damage.parts[0][0] = wpDamage + \" + \" + bonus;\n          copyItem.system.properties.push(\"mgc\");\n          if (verDamage !== \"\" && verDamage !== null) copyItem.system.damage.versatile = verDamage + \" + \" + bonus;\n          targetActor.updateEmbeddedDocuments(\"Item\", [copyItem]);\n        },\n      },\n      cancel: {\n        label: `Cancel`,\n      },\n    },\n  }).render(true);\n}\n\n// Revert weapon and unset flag.\nif (args[0] === \"off\") {\n  const { damage, weapon, weaponDmg, verDmg, mgc } = DAE.getFlag(targetActor, \"magicWeapon\");\n  const weaponItem = targetActor.items.get(weapon);\n  let copyItem = foundry.utils.duplicate(weaponItem);\n  copyItem.system.attack.bonus = damage;\n  copyItem.system.damage.parts[0][0] = weaponDmg;\n  if (!mgc) copyItem.system.properties = DDBImporter.EffectHelper.removeFromProperties(copyItem.system.properties, \"mgc\");\n  if (verDmg !== \"\" && verDmg !== null) copyItem.system.damage.versatile = verDmg;\n  targetActor.updateEmbeddedDocuments(\"Item\", [copyItem]);\n  DAE.unsetFlag(targetActor, \"magicWeapon\");\n}\n"
      }
    }
  },
  "effects": [
    {
      "icon": "icons/skills/melee/strike-blade-hooked-green-purple.webp",
      "changes": [
        {
          "key": "macro.itemMacro",
          "value": "@item.level",
          "mode": 0,
          "priority": 0
        }
      ],
      "duration": {
        "seconds": 3600,
        "startTime": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null,
        "combat": null
      },
      "tint": null,
      "transfer": false,
      "disabled": false,
      "flags": {
        "dae": {
          "transfer": false,
          "stackable": "noneName"
        },
        "ddbimporter": {
          "disabled": false
        },
        "midi-qol": {
          "forceCEOff": true
        },
        "core": {}
      },
      "name": "Magic Weapon",
      "statuses": [],
      "_id": "aj33OViHcC6GPJAg",
      "description": "",
      "origin": null,
      "_key": "!items.effects!0ZJzhP9PAQ9gt3px.aj33OViHcC6GPJAg"
    }
  ],
  "img": "icons/skills/melee/strike-blade-hooked-green-purple.webp",
  "folder": "Muf6CObMiNg37DS4",
  "ownership": {
    "default": 0,
    "6yhz13iFYYklKtgA": 3
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.1.2",
    "coreVersion": "11.315",
    "createdTime": 1721274675600,
    "modifiedTime": 1721274675600,
    "lastModifiedBy": "6yhz13iFYYklKtgA"
  },
  "_id": "0ZJzhP9PAQ9gt3px",
  "sort": 0,
  "_key": "!items!0ZJzhP9PAQ9gt3px"
}
