{
  "type": "spell",
  "system": {
    "description": {
      "value": "<div class=\"ddb\">\n<p>The spell captures some of the incoming energy, lessening its effect on you and storing it for your next melee attack. You have resistance to the triggering damage type until the start of your next turn. Also, the first time you hit with a melee attack on your next turn, the target takes an extra 1d6 damage of the triggering type, and the spell ends.</p>\n<p><strong><em>At Higher Levels.</em></strong> When you cast this spell using a spell slot of 2nd level or higher, the extra damage increases by 1d6 for each slot level above 1st.</p>\n</div>",
      "chat": ""
    },
    "source": {
      "book": "Elemental Evil Player's Companion",
      "page": "150",
      "license": "",
      "custom": ""
    },
    "activation": {
      "type": "reactiondamage",
      "cost": 1,
      "condition": "which you take when you take acid, cold, fire, lightning, or thunder damage"
    },
    "duration": {
      "value": "1",
      "units": "round"
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self",
      "prompt": true
    },
    "range": {
      "value": null,
      "long": null,
      "units": "self"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": "",
      "prompt": true
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null,
      "scale": false
    },
    "ability": "",
    "actionType": "util",
    "attack": {
      "bonus": "",
      "flat": false
    },
    "chatFlavor": "Uses the damage type of the triggered attack: Acid, Cold, Fire, Lightning, or Poison.",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "summons": null,
    "level": 1,
    "school": "abj",
    "properties": [
      "somatic"
    ],
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "level",
      "formula": "1d6"
    }
  },
  "name": "Absorb Elements",
  "flags": {
    "ddbimporter": {
      "id": 137857,
      "definitionId": 2368,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "originalName": "Absorb Elements",
      "sources": [
        {
          "sourceId": 4,
          "pageNumber": 150,
          "sourceType": 1
        }
      ],
      "tags": [
        "Damage",
        "Warding"
      ],
      "version": "5.1.27",
      "effectsApplied": true,
      "chrisEffectsApplied": true,
      "chrisPreEffectName": "Absorb Elements"
    },
    "dynamiceffects": {
      "equipActive": [
        true,
        true,
        true
      ],
      "alwaysActive": [
        true,
        true,
        true
      ]
    },
    "mess": {
      "templateTexture": ""
    },
    "dae": {
      "activeEquipped": false,
      "alwaysActive": false
    },
    "exportSource": {
      "world": "waterdeep-dungeon-of-the-mad-mage",
      "system": "dnd5e",
      "coreVersion": "0.7.9",
      "systemVersion": "1.2.4"
    },
    "betterRolls5e": {
      "quickDesc": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickAttack": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickSave": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickDamage": {
        "type": "Array",
        "value": [],
        "altValue": [],
        "context": []
      },
      "quickVersatile": {
        "type": "Boolean",
        "value": false,
        "altValue": false
      },
      "quickProperties": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickCharges": {
        "type": "Boolean",
        "value": {
          "use": false,
          "resource": true
        },
        "altValue": {
          "use": false,
          "resource": true
        }
      },
      "quickTemplate": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickOther": {
        "type": "Boolean",
        "value": true,
        "altValue": true,
        "context": ""
      },
      "quickFlavor": {
        "type": "Boolean",
        "value": true,
        "altValue": true
      },
      "quickPrompt": {
        "type": "Boolean",
        "value": false,
        "altValue": false
      }
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Absorb Elements",
          "type": "script",
          "author": "devnIbfBHb74U9Zv",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "let tactor;\nlet itemname = \"Absorb Elements\";\nif (args[0].tokenUuid) tactor = (await fromUuid(args[0].tokenUuid)).actor;\nelse tactor = game.actors.get(args[0].actorId);\n\nlet dialog = new Promise((resolve, reject) => {\n    new Dialog({\n        title: 'Choose a damage type',\n        content: `\n          <form class=\"flexcol\">\n            <div class=\"form-group\">\n              <select id=\"element\">\n                <option value=\"acid\">Acid</option>\n                <option value=\"cold\">Cold</option>\n                <option value=\"fire\">Fire</option>\n                <option value=\"lightning\">Lightning</option>\n                <option value=\"thunder\">Thunder</option>\n              </select>\n            </div>\n          </form>\n        `,\n        //select element type\n        buttons: {\n            yes: {\n                icon: '<i class=\"fas fa-bolt\"></i>',\n                label: 'Select',\n                callback: async (html) => {\n                    let element = html.find('#element').val();\n                    let effect =  tactor.effects.find(i => i.data.label === itemname);\n                    let changes = duplicate(effect.data.changes);\n                    changes[0].value = `${args[0].spellLevel}d6[${element}]`;\n                    changes[1].value = `${args[0].spellLevel}d6[${element}]`;\n                    await effect.update({changes});\n                    effect =  tactor.effects.find(i => i.data.label === `${itemname} Resistance`);\n                    changes = duplicate(effect.data.changes);\n                    changes[0].value = element;\n                    await effect.update({changes});\n                    resolve();\n                },\n            },\n        }\n    }).render(true);\n})\nawait dialog;",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        },
        "name": "Absorb Elements",
        "type": "script",
        "img": "icons/svg/dice-target.svg",
        "scope": "global",
        "command": "const version = \"11.0.7\";\ntry {\n  let tactor;\n  let itemName = args[0].itemData.name;\n  if (args[0].tokenUuid) tactor = (await fromUuid(args[0].tokenUuid)).actor;\n  else tactor = game.actors.get(args[0].actorId);\n\n  let dialog = new Promise((resolve, reject) => {\n      new Dialog({\n          title: 'Choose a damage type',\n          content: `\n            <form class=\"flexcol\">\n              <div class=\"form-group\">\n                <select id=\"element\">\n                  <option value=\"acid\">Acid</option>\n                  <option value=\"cold\">Cold</option>\n                  <option value=\"fire\">Fire</option>\n                  <option value=\"lightning\">Lightning</option>\n                  <option value=\"thunder\">Thunder</option>\n                </select>\n              </div>\n            </form>\n          `,\n          //select element type\n          buttons: {\n              yes: {\n                  icon: '<i class=\"fas fa-bolt\"></i>',\n                  label: 'Select',\n                  callback: async (html) => {\n                      let element = html.find('#element').val();\n                      let effect =  tactor.effects.find(i => i.label === itemName);\n                      let changes = duplicate(effect.changes);\n                      changes[0].value = `${args[0].spellLevel}d6[${element}]`;\n                      changes[1].value = `${args[0].spellLevel}d6[${element}]`;\n                      await effect.update({changes});\n                      effect =  tactor.effects.find(i => i.label === `${itemName} Resistance`);\n                      changes = duplicate(effect.changes);\n                      changes[0].value = element;\n                      await effect.update({changes});\n                      resolve();\n                  },\n              },\n          }\n      }).render(true);\n  })\n  await dialog;\n} catch (err) {\n    console.error(`${itemName} - Absorb Elements ${version}`, err);\n}",
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "midi-qol": {
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "effectActivation": false,
      "rollAttackPerTarget": "default",
      "itemCondition": "",
      "reactionCondition": "",
      "effectCondition": ""
    },
    "favtab": {
      "isFavorite": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false,
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "offHandWeapon": false,
      "ignoreTotalCover": false,
      "confirmTargets": "default",
      "noConcentrationCheck": false
    },
    "dnd5e": {
      "migratedProperties": [
        "somatic"
      ]
    }
  },
  "effects": [
    {
      "_id": "vVxoF5n9H9hA3EDo",
      "flags": {
        "dae": {
          "stackable": "none",
          "macroRepeat": "none",
          "transfer": false,
          "specialDuration": [
            "DamageDealt"
          ],
          "selfTarget": false,
          "durationExpression": ""
        },
        "ActiveAuras": {
          "isAura": false,
          "ignoreSelf": false,
          "hidden": false,
          "height": false,
          "alignment": "",
          "type": "",
          "aura": "None",
          "radius": null,
          "save": "",
          "savedc": null,
          "hostile": false,
          "onlyOnce": false,
          "time": "None"
        },
        "core": {
          "statusId": ""
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        }
      },
      "changes": [
        {
          "key": "system.bonuses.msak.damage",
          "mode": 0,
          "value": "0",
          "priority": 20
        },
        {
          "key": "system.bonuses.mwak.damage",
          "mode": 0,
          "value": "0",
          "priority": 20
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null,
        "rounds": 2,
        "startTurn": 1,
        "seconds": null,
        "combat": null,
        "turns": null,
        "startRound": null
      },
      "tint": "#ffffff",
      "transfer": false,
      "origin": null,
      "name": "Absorb Elements",
      "description": "",
      "statuses": [],
      "_key": "!items.effects!D37s7Z6W7R4KGR8S.vVxoF5n9H9hA3EDo"
    },
    {
      "_id": "JFUlLTrAj1zZIW5R",
      "changes": [
        {
          "key": "system.traits.dr.value",
          "mode": 2,
          "value": "fire",
          "priority": 20
        }
      ],
      "disabled": false,
      "duration": {
        "rounds": 2,
        "startTime": null,
        "seconds": null,
        "combat": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "origin": "Item.csBPw2sdmOigPnOV",
      "transfer": false,
      "flags": {
        "dae": {
          "stackable": "none",
          "macroRepeat": "none",
          "specialDuration": [
            "turnEnd"
          ],
          "transfer": false
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "hostile": false,
          "onlyOnce": false
        },
        "core": {
          "statusId": ""
        }
      },
      "tint": "#ffffff",
      "name": "Absorb Elements Resistance",
      "description": "",
      "statuses": [],
      "_key": "!items.effects!D37s7Z6W7R4KGR8S.JFUlLTrAj1zZIW5R"
    }
  ],
  "img": "icons/magic/lightning/orb-ball-purple.webp",
  "folder": "QG5P4iTezYNjNLlu",
  "ownership": {
    "default": 0,
    "6yhz13iFYYklKtgA": 3
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.1.2",
    "coreVersion": "11.315",
    "createdTime": 1721274674367,
    "modifiedTime": 1721274674367,
    "lastModifiedBy": "6yhz13iFYYklKtgA"
  },
  "_id": "D37s7Z6W7R4KGR8S",
  "sort": 0,
  "_key": "!items!D37s7Z6W7R4KGR8S"
}
