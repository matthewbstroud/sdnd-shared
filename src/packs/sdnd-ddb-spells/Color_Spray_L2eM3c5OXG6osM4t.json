{
  "type": "spell",
  "system": {
    "description": {
      "value": "<div class=\"ddb\">\n<p>A dazzling array of flashing, colored light springs from your hand. Roll 6d10; the total is how many hit points of creatures this spell can affect. Creatures in a 15-foot &amp;Reference[cone]{cone} originating from you are affected in ascending order of their current hit points (ignoring &amp;Reference[unconscious]{unconscious} creatures and creatures that can’t see).</p>\n<p>Starting with the creature that has the lowest current hit points, each creature affected by this spell is &amp;Reference[blinded]{blinded} until the end of your next turn. Subtract each creature’s hit points from the total before moving on to the creature with the next lowest hit points. A creature’s hit points must be equal to or less than the remaining total for that creature to be affected.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 2nd level or higher, roll an additional 2d10 for each slot level above 1st.</p>\n</div>",
      "chat": ""
    },
    "source": {
      "book": "Player’s Handbook",
      "page": "222",
      "license": "",
      "custom": ""
    },
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": "1",
      "units": "round"
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": 15,
      "units": "ft",
      "type": "cone",
      "width": null,
      "prompt": true
    },
    "range": {
      "value": null,
      "long": null,
      "units": "self"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": "",
      "prompt": true
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null,
      "scale": false
    },
    "ability": "",
    "actionType": "other",
    "attack": {
      "bonus": "",
      "flat": false
    },
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [
        [
          "6d10",
          "midi-none"
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "summons": null,
    "level": 1,
    "school": "ill",
    "properties": [
      "vocal",
      "somatic",
      "material"
    ],
    "materials": {
      "value": "a pinch of powder or sand that is colored red, yellow, and blue",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "level",
      "formula": "2d10"
    }
  },
  "name": "Color Spray",
  "flags": {
    "ddbimporter": {
      "id": 136229,
      "definitionId": 2031,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "originalName": "Color Spray",
      "sources": [
        {
          "sourceId": 1,
          "pageNumber": null,
          "sourceType": 2
        },
        {
          "sourceId": 2,
          "pageNumber": 222,
          "sourceType": 1
        }
      ],
      "tags": [
        "Control"
      ],
      "version": "5.1.27",
      "effectsApplied": true
    },
    "midi-qol": {
      "removeAttackDamageButtons": "default",
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "forceCEOff": true
    },
    "midiProperties": {
      "confirmTargets": "default",
      "magicdam": true,
      "magiceffect": true
    },
    "dae": {
      "macro": {
        "name": "Color Spray",
        "type": "script",
        "scope": "global",
        "command": "// based on @ccjmk and @crymic macro for sleep.\n// uses convinient effects\n// Midi-qol \"On Use\"\n\nconst blindHp = await args[0].damageTotal;\nconst immuneConditions = [game.i18n.localize(\"Blinded\"), game.i18n.localize(\"Unconscious\")];\nconsole.log(`Color Spray Spell => Available HP Pool [${blindHp}] points`);\nconst targets = await args[0].targets\n  .filter((i) => i.actor.system.attributes.hp.value != 0 && !i.actor.effects.find((x) => immuneConditions.includes((x.name ?? x.label))))\n  .sort((a, b) => (canvas.tokens.get(a.id).actor.system.attributes.hp.value < canvas.tokens.get(b.id).actor.system.attributes.hp.value ? -1 : 1));\nlet remainingBlindHp = blindHp;\nlet blindTarget = [];\n\nfor (let target of targets) {\n  const findTarget = await canvas.tokens.get(target.id);\n  const targetHpValue = findTarget.actor.system.attributes.hp.value;\n  const targetImg = target?.texture?.src;\n\n  if (remainingBlindHp >= targetHpValue) {\n    remainingBlindHp -= targetHpValue;\n    console.log(`Color Spray Results => Target: ${findTarget.name} |  HP: ${targetHpValue} | HP Pool: ${remainingBlindHp} | Status: Blinded`);\n    blindTarget.push(`<div class=\"midi-qol-flex-container\"><div>Blinded</div><div class=\"midi-qol-target-npc midi-qol-target-name\" id=\"${findTarget.id}\"> ${findTarget.name}</div><div><img src=\"${targetImg}\" width=\"30\" height=\"30\" style=\"border:0px\"></div></div>`);\n    const gameRound = game.combat ? game.combat.round : 0;\n    const effectData = {\n      label: \"Color Spray: Blinded\",\n      name: \"Color Spray: Blinded\",\n      icon: args[0].itemData.img,\n      origin: args[0].uuid,\n      disabled: false,\n      duration: { startRound: gameRound, startTime: game.time.worldTime },\n      flags: { dae: { specialDuration: [\"turnEndSource\"] } },\n      changes: [\n        DDBImporter.EffectHelper.generateCEStatusEffectChange(game.i18n.localize(\"Blinded\"), 20, true),\n      ]\n    };\n\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: findTarget.actor.uuid, effects: [effectData] });\n\n  } else {\n    console.log(`Color Spray Results => Target: ${target.name} | HP: ${targetHpValue} | HP Pool: ${remainingBlindHp - targetHpValue} | Status: Not enough HP remaining`);\n    blindTarget.push(`<div class=\"midi-qol-flex-container\"><div>misses</div><div class=\"midi-qol-target-npc midi-qol-target-name\" id=\"${findTarget.id}\"> ${findTarget.name}</div><div><img src=\"${targetImg}\" width=\"30\" height=\"30\" style=\"border:0px\"></div></div>`);\n  }\n}\nawait DDBImporter?.EffectHelper.wait(500);\nconst blindResults = `<div><div class=\"midi-qol-nobox\">${blindTarget.join('')}</div></div>`;\nconst chatMessage = game.messages.get(args[0].itemCardId);\nlet content = foundry.utils.duplicate(chatMessage.content);\nconst searchString = /<div class=\"midi-qol-hits-display\">[\\s\\S]*<div class=\"end-midi-qol-hits-display\">/g;\nconst replaceString = `<div class=\"midi-qol-hits-display\"><div class=\"end-midi-qol-hits-display\">${blindResults}`;\ncontent = await content.replace(searchString, replaceString);\nawait chatMessage.update({ content: content });\n"
      }
    }
  },
  "effects": [],
  "img": "icons/magic/light/projectile-bolts-salvo-yellow.webp",
  "folder": "CckA9KDh0fOPelFO",
  "ownership": {
    "default": 0,
    "6yhz13iFYYklKtgA": 3
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.3.1",
    "coreVersion": "12.331",
    "createdTime": 1721274674716,
    "modifiedTime": 1730039103872,
    "lastModifiedBy": "6yhz13iFYYklKtgA",
    "compendiumSource": null,
    "duplicateSource": null
  },
  "_id": "L2eM3c5OXG6osM4t",
  "sort": 0,
  "_key": "!items!L2eM3c5OXG6osM4t"
}
