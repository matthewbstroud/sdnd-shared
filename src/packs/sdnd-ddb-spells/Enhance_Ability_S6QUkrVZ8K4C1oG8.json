{
  "type": "spell",
  "system": {
    "description": {
      "value": "<div class=\"ddb\">\n<p>You touch a creature and bestow upon it a magical enhancement. Choose one of the following effects; the target gains that effect until the spell ends.</p>\n<p><strong>Bear's Endurance.</strong> The target has advantage on &amp;Reference[con]{Constitution} checks. It also gains 2d6 temporary hit points, which are lost when the spell ends.</p>\n<p><strong>Bull's &amp;Reference[str]{Strength}.</strong> The target has advantage on &amp;Reference[str]{Strength} checks, and his or her carrying capacity doubles.</p>\n<p><strong>Cat's Grace.</strong> The target has advantage on &amp;Reference[dex]{Dexterity} checks. It also doesn't take damage from falling 20 feet or less if it isn't &amp;Reference[incapacitated]{incapacitated}.</p>\n<p><strong>Eagle's Splendor.</strong> The target has advantage on &amp;Reference[cha]{Charisma} checks.</p>\n<p><strong>Fox's Cunning.</strong> The target has advantage on &amp;Reference[int]{Intelligence} checks.</p>\n<p><strong>Owl's &amp;Reference[wis]{Wisdom}.</strong> The target has advantage on &amp;Reference[wis]{Wisdom} checks.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>\n</div>",
      "chat": ""
    },
    "source": {
      "book": "Playerâ€™s Handbook",
      "page": "237",
      "license": "",
      "custom": ""
    },
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": "1",
      "units": "hour"
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": 1,
      "units": "1",
      "type": "creature",
      "width": null,
      "prompt": true
    },
    "range": {
      "value": null,
      "long": null,
      "units": "touch"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": "",
      "prompt": true
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null,
      "scale": false
    },
    "ability": "",
    "actionType": "util",
    "attack": {
      "bonus": "",
      "flat": false
    },
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "summons": null,
    "level": 2,
    "school": "trs",
    "properties": [
      "vocal",
      "somatic",
      "material",
      "concentration"
    ],
    "materials": {
      "value": "fur or a feather from a beast",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    }
  },
  "name": "Enhance Ability",
  "flags": {
    "ddbimporter": {
      "id": 136709,
      "definitionId": 2083,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "originalName": "Enhance Ability",
      "sources": [
        {
          "sourceId": 1,
          "pageNumber": null,
          "sourceType": 2
        },
        {
          "sourceId": 2,
          "pageNumber": 237,
          "sourceType": 1
        }
      ],
      "tags": [
        "Buff"
      ],
      "version": "5.1.27",
      "effectsApplied": true
    },
    "midi-qol": {
      "removeAttackDamageButtons": "default",
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "forceCEOff": true
    },
    "midiProperties": {
      "confirmTargets": "default",
      "magicdam": true,
      "magiceffect": true
    },
    "dae": {
      "macro": {
        "name": "Enhance Ability",
        "type": "script",
        "scope": "global",
        "command": "const lastArg = args[args.length - 1];\n\nasync function updateActor(kind, targetActor) {\n  DAE.setFlag(targetActor, 'enhanceAbility', { name: kind });\n  // const effectName = lastArg.efData.name ?? lastArg.efData.label;\n  const effectName = lastArg.itemData.effects[0].name;\n  const effect = DDBImporter.EffectHelper.findEffect(targetActor, effectName);\n\n  // console.warn(\"update actor\", {\n  //   kind,\n  //   effectName,\n  //   effect,\n  //   targetActor,\n  // })\n  let changes = [];\n  switch (kind) {\n    case \"bear\": {\n      changes = [{\n        key: \"flags.midi-qol.advantage.ability.save.con\",\n        mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM,\n        priority: 20,\n        value: \"1\",\n      }];\n      ChatMessage.create({ content: `${targetActor.name} has advantage on Constitution checks` });\n      const amount = await new CONFIG.Dice.DamageRoll(\"2d6\").evaluate({ async: true });\n      console.warn(amount);\n      if (\n        !Number.isInteger(targetActor.system.attributes.hp.temp)\n        || amount.total > targetActor.system.attributes.hp.temp\n      ) {\n        console.log(`${targetActor.name} gains ${amount.total} temp Hp`, amount);\n        ChatMessage.create({ content: `${targetActor.name} gains ${amount.total} temp Hp` });\n        await targetActor.update({ \"system.attributes.hp.temp\": amount.total });\n      }\n      break;\n    }\n    case \"bull\": {\n      changes = [{\n        key: \"flags.dnd5e.powerfulBuild\",\n        mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM,\n        priority: 20,\n        value: \"1\",\n      },\n      {\n        key: \"flags.midi-qol.advantage.ability.check.str\",\n        mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM,\n        priority: 20,\n        value: \"1\",\n      }];\n      ChatMessage.create({ content: `${targetActor.name}'s encumbrance is doubled` });\n      ChatMessage.create({ content: `${targetActor.name} has advantage on Strength checks` });\n      break;\n    }\n    case \"cat\": {\n      changes = [{\n        key: \"flags.midi-qol.advantage.ability.check.dex\",\n        mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM,\n        priority: 20,\n        value: \"1\",\n      }];\n      ChatMessage.create({\n        content: `${targetActor.name} doesn't take damage from falling 20 feet or less if it isn't incapacitated.`,\n      });\n      ChatMessage.create({ content: `${targetActor.name} has advantage on Dexterity checks` });\n      break;\n    }\n    case \"eagle\": {\n      changes = [{\n        key: \"flags.midi-qol.advantage.ability.check.cha\",\n        mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM,\n        priority: 20,\n        value: \"1\",\n      }];\n      ChatMessage.create({ content: `${targetActor.name} has advantage on Charisma checks` });\n      break;\n    }\n    case \"fox\": {\n      changes = [{\n        key: \"flags.midi-qol.advantage.ability.check.int\",\n        mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM,\n        priority: 20,\n        value: \"1\",\n      }];\n      ChatMessage.create({ content: `${targetActor.name} has advantage on Intelligence checks` });\n      break;\n    }\n    case \"owl\": {\n      changes = [{\n        key: \"flags.midi-qol.advantage.ability.check.wis\",\n        mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM,\n        priority: 20,\n        value: \"1\",\n      }];\n      ChatMessage.create({ content: `${targetActor.name} has advantage on Wisdom checks` });\n      break;\n    }\n  }\n  if (changes.length > 0) {\n    console.log(`Applying ${kind} changes to ${targetActor.name}`, changes);\n    await effect.update({ changes: changes.concat(effect.changes) });\n  }\n\n}\n\n/**\n * For each target select the effect (GM selection)\n */\nif (lastArg.tag === \"OnUse\" && lastArg.macroPass === \"postActiveEffects\") {\n  if (lastArg.targets.length < 1) {\n    ui.notifications.error(\"Enhance Ability: No target selected: unable to automate effect.\");\n    return;\n  }\n  for (const target of lastArg.targets) {\n    await new Dialog({\n      title: \"Choose Enhance Ability option for \" + target.name,\n      content: \"<p>Choose option</p>\",\n      buttons: {\n        one: {\n          label: \"Bear's Endurance\",\n          callback: async () => await updateActor(\"bear\", target.actor),\n        },\n        two: {\n          label: \"Bull's Strength\",\n          callback: async () => await updateActor(\"bull\", target.actor),\n        },\n        three: {\n          label: \"Cat's Grace\",\n          callback: async () => await updateActor(\"cat\", target.actor),\n        },\n        four: {\n          label: \"Eagle's Splendor\",\n          callback: async () => await updateActor(\"eagle\", target.actor),\n        },\n        five: {\n          label: \"Fox's Cunning\",\n          callback: async () => await updateActor(\"fox\", target.actor),\n        },\n        six: {\n          label: \"Owl's Wisdom\",\n          callback: async () => await updateActor(\"owl\", target.actor),\n        },\n      },\n    }).render(true);\n  }\n}\n\nif (args[0] === \"off\") {\n  // console.warn(\"off called\", { args, scope })\n  const tokenOrActor = await fromUuid(lastArg.actorUuid);\n  const targetActor = tokenOrActor.actor ? tokenOrActor.actor : tokenOrActor;\n  const flag = await DAE.getFlag(targetActor, 'enhanceAbility');\n  if (flag.name === \"bear\") {\n    await targetActor.update({ \"system.attributes.hp.temp\": \"\" });\n    await DAE.unsetFlag(targetActor, \"enhanceAbility\");\n  }\n  ChatMessage.create({ content: \"Enhance Ability has expired\" });\n}\n"
      }
    }
  },
  "effects": [
    {
      "changes": [
        {
          "key": "macro.itemMacro",
          "value": "",
          "mode": 0,
          "priority": 20
        }
      ],
      "duration": {
        "seconds": 3600,
        "startTime": null,
        "rounds": 600,
        "turns": null,
        "startRound": null,
        "startTurn": null,
        "combat": null
      },
      "tint": "#ffffff",
      "transfer": false,
      "disabled": false,
      "flags": {
        "dae": {
          "transfer": false,
          "stackable": "noneName"
        },
        "ddbimporter": {
          "disabled": false
        },
        "midi-qol": {
          "forceCEOff": true
        },
        "core": {}
      },
      "name": "Enhance Ability",
      "statuses": [],
      "_id": "r5vea6VfNlOdU2Co",
      "description": "",
      "origin": null,
      "_stats": {
        "coreVersion": "12.331",
        "systemId": null,
        "systemVersion": null,
        "createdTime": null,
        "modifiedTime": null,
        "lastModifiedBy": null,
        "compendiumSource": null,
        "duplicateSource": null
      },
      "img": "icons/magic/control/buff-strength-muscle-damage-orange.webp",
      "type": "base",
      "system": {},
      "sort": 0,
      "_key": "!items.effects!S6QUkrVZ8K4C1oG8.r5vea6VfNlOdU2Co"
    }
  ],
  "img": "icons/magic/control/buff-strength-muscle-damage-orange.webp",
  "folder": "Muf6CObMiNg37DS4",
  "ownership": {
    "default": 0,
    "6yhz13iFYYklKtgA": 3
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.3.1",
    "coreVersion": "12.331",
    "createdTime": 1721274673399,
    "modifiedTime": 1730039103877,
    "lastModifiedBy": "6yhz13iFYYklKtgA",
    "compendiumSource": null,
    "duplicateSource": null
  },
  "_id": "S6QUkrVZ8K4C1oG8",
  "sort": 0,
  "_key": "!items!S6QUkrVZ8K4C1oG8"
}
