{
  "type": "spell",
  "system": {
    "description": {
      "value": "<div class=\"ddb\">\n<p>You can blind or deafen a foe. Choose one creature that you can see within range to make a &amp;Reference[con]{Constitution} saving throw. If it fails, the target is either &amp;Reference[blinded]{blinded} or &amp;Reference[deafened]{deafened} (your choice) for the duration. At the end of each of its turns, the target can make a &amp;Reference[con]{Constitution} saving throw. On a success, the spell ends.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>\n</div>",
      "chat": ""
    },
    "source": {
      "book": "Playerâ€™s Handbook",
      "page": "219",
      "license": "",
      "custom": ""
    },
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": "1",
      "units": "minute"
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": 1,
      "units": "",
      "type": "creature",
      "width": null,
      "prompt": true
    },
    "range": {
      "value": 30,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": "",
      "prompt": true
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null,
      "scale": false
    },
    "ability": "",
    "actionType": "save",
    "attack": {
      "bonus": "",
      "flat": false
    },
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "con",
      "dc": null,
      "scaling": "spell"
    },
    "summons": null,
    "level": 2,
    "school": "nec",
    "properties": [
      "vocal"
    ],
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    }
  },
  "name": "Blindness/Deafness",
  "flags": {
    "ddbimporter": {
      "id": 136147,
      "definitionId": 2018,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "originalName": "Blindness/Deafness",
      "sources": [
        {
          "sourceId": 1,
          "pageNumber": null,
          "sourceType": 2
        },
        {
          "sourceId": 2,
          "pageNumber": 219,
          "sourceType": 1
        }
      ],
      "tags": [
        "Debuff"
      ],
      "version": "5.1.27",
      "effectsApplied": true
    },
    "midi-qol": {
      "removeAttackDamageButtons": "default",
      "onUseMacroName": "[postActiveEffects]ItemMacro",
      "forceCEOff": true
    },
    "midiProperties": {
      "confirmTargets": "default",
      "magicdam": true,
      "magiceffect": true
    },
    "dae": {
      "macro": {
        "name": "Blindness/Deafness",
        "type": "script",
        "scope": "global",
        "command": "if (!game.modules.get(\"dfreds-convenient-effects\")?.active) {\n  ui.notifications.error(\"Please enable the CE module\");\n  return;\n}\n\nconst lastArg = args[args.length - 1];\n\nif (lastArg.tag === \"OnUse\") {\n  if (lastArg.targets.length < 1) {\n    ui.notifications.error(\"Blindness/Deafness: No target selected: unable to automate effect.\");\n    return;\n  }\n  new Dialog({\n    title: \"Choose an Effect\",\n    buttons: {\n      blind: {\n        label: \"Blindness\",\n        callback: () => {\n          lastArg.targets.forEach((targetToken) => {\n            const targetActor = targetToken.actor;\n            DAE.setFlag(targetActor, \"DAEBlind\", \"blind\");\n            game.dfreds.effectInterface.addEffect({ effectName: \"Blinded\", uuid: targetActor.uuid });\n            const changes = [\n              {\n                key: \"ATL.sight.range\",\n                mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n                priority: 99,\n                value: \"0\",\n              },\n            ];\n            const effectName = lastArg.itemData.effects[0].name;\n            const effect = DDBImporter.EffectHelper.findEffect(targetActor, effectName);\n            // console.warn(\"effect\", {effect, effectName});\n            effect.update({ changes: changes.concat(effect.changes) });\n          });\n        },\n      },\n      deaf: {\n        label: \"Deafness\",\n        callback: () => {\n          lastArg.targets.forEach((targetToken) => {\n            const targetActor = targetToken.actor;\n            DAE.setFlag(targetActor, \"DAEBlind\", \"deaf\");\n            game.dfreds.effectInterface.addEffect({ effectName: \"Deafened\", uuid: targetActor.uuid });\n          });\n        },\n      },\n    },\n  }).render(true);\n}\n\nif (args[0] === \"off\") {\n  const tokenOrActor = await fromUuid(lastArg.actorUuid);\n  const targetActor = tokenOrActor.actor ? tokenOrActor.actor : tokenOrActor;\n  let flag = DAE.getFlag(targetActor, \"DAEBlind\");\n  if (flag === \"blind\") {\n    if (DDBImporter.EffectHelper.effectConditionAppliedAndActive(\"Blinded\", targetActor))\n      game.dfreds.effectInterface.removeEffect({ effectName: \"Blinded\", uuid: targetActor.uuid });\n  } else if (flag === \"deaf\") {\n    if (DDBImporter.EffectHelper.effectConditionAppliedAndActive(\"Deafened\", targetActor))\n      game.dfreds.effectInterface.removeEffect({ effectName: \"Deafened\", uuid: targetActor.uuid });\n  }\n  DAE.unsetFlag(targetActor, \"DAEBlind\");\n}\n"
      }
    }
  },
  "effects": [
    {
      "icon": "icons/creatures/eyes/humanoid-single-blind.webp",
      "changes": [
        {
          "key": "flags.midi-qol.OverTime",
          "mode": 5,
          "value": "label=Blindness/Deafness (End of Turn),turn=end,saveDC=@attributes.spelldc,saveAbility=con,savingThrow=true,saveMagic=true,killAnim=true",
          "priority": 20
        },
        {
          "key": "macro.itemMacro",
          "value": "",
          "mode": 0,
          "priority": 20
        }
      ],
      "duration": {
        "seconds": 60,
        "startTime": null,
        "rounds": 10,
        "turns": null,
        "startRound": null,
        "startTurn": null,
        "combat": null
      },
      "tint": null,
      "transfer": false,
      "disabled": false,
      "flags": {
        "dae": {
          "transfer": false,
          "stackable": "noneName"
        },
        "ddbimporter": {
          "disabled": false
        },
        "midi-qol": {
          "forceCEOff": true
        },
        "core": {}
      },
      "name": "Blindness/Deafness",
      "statuses": [],
      "_id": "BsWGtWGIXGWE778M",
      "description": "",
      "origin": null,
      "_key": "!items.effects!EDk0m0xr4UiKnPAG.BsWGtWGIXGWE778M"
    }
  ],
  "img": "icons/creatures/eyes/humanoid-single-blind.webp",
  "folder": "ocH9XKjvhtI6hJk6",
  "ownership": {
    "default": 0,
    "6yhz13iFYYklKtgA": 3
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.1.2",
    "coreVersion": "11.315",
    "createdTime": 1721274673227,
    "modifiedTime": 1721274673227,
    "lastModifiedBy": "6yhz13iFYYklKtgA"
  },
  "_id": "EDk0m0xr4UiKnPAG",
  "sort": 0,
  "_key": "!items!EDk0m0xr4UiKnPAG"
}
