{
  "name": "Beholder Zombie",
  "type": "npc",
  "_id": "qzIFmFRMzqJdztfv",
  "img": "https://www.dndbeyond.com/avatars/30836/799/638063944708081396.png",
  "system": {
    "currency": {
      "pp": 0,
      "gp": 0,
      "ep": 0,
      "sp": 0,
      "cp": 0
    },
    "abilities": {
      "str": {
        "value": 10,
        "proficient": 0,
        "max": null,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "dex": {
        "value": 8,
        "proficient": 0,
        "max": null,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "con": {
        "value": 16,
        "proficient": 0,
        "max": null,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "int": {
        "value": 3,
        "proficient": 0,
        "max": null,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "wis": {
        "value": 8,
        "proficient": 1,
        "max": null,
        "bonuses": {
          "check": "",
          "save": ""
        }
      },
      "cha": {
        "value": 5,
        "proficient": 0,
        "max": null,
        "bonuses": {
          "check": "",
          "save": ""
        }
      }
    },
    "bonuses": {
      "mwak": {
        "attack": "",
        "damage": ""
      },
      "rwak": {
        "attack": "",
        "damage": ""
      },
      "msak": {
        "attack": "",
        "damage": ""
      },
      "rsak": {
        "attack": "",
        "damage": ""
      },
      "abilities": {
        "check": "",
        "save": "",
        "skill": ""
      },
      "spell": {
        "dc": ""
      }
    },
    "skills": {
      "acr": {
        "ability": "dex",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ani": {
        "ability": "wis",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "arc": {
        "ability": "int",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ath": {
        "ability": "str",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "dec": {
        "ability": "cha",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "his": {
        "ability": "int",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ins": {
        "ability": "wis",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "itm": {
        "ability": "cha",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "inv": {
        "ability": "int",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "med": {
        "ability": "wis",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "nat": {
        "ability": "int",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "prc": {
        "ability": "wis",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "prf": {
        "ability": "cha",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "per": {
        "ability": "cha",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "rel": {
        "ability": "int",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "slt": {
        "ability": "dex",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "ste": {
        "ability": "dex",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      },
      "sur": {
        "ability": "wis",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "value": 0,
        "bonuses": {
          "check": "",
          "passive": ""
        }
      }
    },
    "tools": {},
    "spells": {
      "spell1": {
        "value": 0,
        "override": null
      },
      "spell2": {
        "value": 0,
        "override": null
      },
      "spell3": {
        "value": 0,
        "override": null
      },
      "spell4": {
        "value": 0,
        "override": null
      },
      "spell5": {
        "value": 0,
        "override": null
      },
      "spell6": {
        "value": 0,
        "override": null
      },
      "spell7": {
        "value": 0,
        "override": null
      },
      "spell8": {
        "value": 0,
        "override": null
      },
      "spell9": {
        "value": 0,
        "override": null
      },
      "pact": {
        "value": 0,
        "override": null
      }
    },
    "attributes": {
      "init": {
        "ability": "",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "bonus": ""
      },
      "movement": {
        "burrow": null,
        "climb": null,
        "fly": 20,
        "swim": null,
        "walk": 0,
        "units": "ft",
        "hover": false
      },
      "attunement": {
        "max": 3
      },
      "senses": {
        "darkvision": 60,
        "blindsight": 0,
        "tremorsense": 0,
        "truesight": 0,
        "units": "ft",
        "special": ""
      },
      "spellcasting": "int",
      "exhaustion": 0,
      "concentration": {
        "ability": "",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "bonuses": {
          "save": ""
        },
        "limit": 1
      },
      "ac": {
        "flat": 15,
        "calc": "natural",
        "formula": ""
      },
      "hp": {
        "value": 93,
        "max": 93,
        "temp": 0,
        "tempmax": 0,
        "formula": "11d10 + 33"
      },
      "death": {
        "ability": "",
        "roll": {
          "min": null,
          "max": null,
          "mode": 0
        },
        "success": 0,
        "failure": 0
      }
    },
    "details": {
      "biography": {
        "value": "",
        "public": ""
      },
      "alignment": "Neutral Evil",
      "race": null,
      "type": {
        "value": "undead",
        "subtype": ""
      },
      "environment": "",
      "cr": 5,
      "spellLevel": 0,
      "source": {
        "book": "Monster Manual",
        "page": "316",
        "custom": "",
        "license": ""
      }
    },
    "resources": {
      "legact": {
        "value": 0,
        "max": 0
      },
      "legres": {
        "value": 0,
        "max": 0
      },
      "lair": {
        "value": false,
        "initiative": null
      }
    },
    "traits": {
      "size": "lg",
      "di": {
        "value": [
          "poison"
        ],
        "bypasses": [],
        "custom": ""
      },
      "dr": {
        "value": [],
        "bypasses": [],
        "custom": ""
      },
      "dv": {
        "value": [],
        "bypasses": [],
        "custom": ""
      },
      "dm": {
        "amount": {},
        "bypasses": []
      },
      "ci": {
        "value": [
          "poisoned",
          "prone"
        ],
        "custom": ""
      },
      "languages": {
        "value": [
          "deep"
        ],
        "custom": "Undercommon (understands but canâ€™t speak)"
      }
    }
  },
  "prototypeToken": {
    "name": "Beholder Zombie",
    "displayName": 20,
    "actorLink": false,
    "appendNumber": false,
    "prependAdjective": false,
    "texture": {
      "src": "ddb-images/other/npc-token-Beholder-Zombie.jpeg",
      "scaleX": 1,
      "scaleY": 1,
      "offsetX": 0,
      "offsetY": 0,
      "rotation": 0
    },
    "width": 2,
    "height": 2,
    "lockRotation": false,
    "rotation": 0,
    "alpha": 1,
    "disposition": -1,
    "displayBars": 20,
    "bar1": {
      "attribute": "attributes.hp"
    },
    "bar2": {
      "attribute": null
    },
    "light": {
      "alpha": 0.5,
      "angle": 360,
      "bright": 0,
      "coloration": 1,
      "dim": 0,
      "attenuation": 0.5,
      "luminosity": 0.5,
      "saturation": 0,
      "contrast": 0,
      "shadows": 0,
      "animation": {
        "type": null,
        "speed": 5,
        "intensity": 5,
        "reverse": false
      },
      "darkness": {
        "min": 0,
        "max": 1
      }
    },
    "sight": {
      "enabled": false,
      "range": 60,
      "angle": 360,
      "visionMode": "darkvision",
      "color": null,
      "attenuation": 0,
      "brightness": 0,
      "saturation": -1,
      "contrast": 0
    },
    "detectionModes": [],
    "flags": {
      "monks-tokenbar": {
        "include": "default"
      },
      "tagger": {
        "tags": [
          "dndbeyond",
          "ddb-importer",
          "undead"
        ]
      }
    },
    "randomImg": false
  },
  "items": [
    {
      "_id": "wICxeFYNoovI4DA2",
      "name": "Bite",
      "type": "weapon",
      "system": {
        "description": {
          "value": "<div class=\"ddb\">\n<section class=\"secret\">\n<p><em><strong></strong> Melee Weapon Attack:</em> +3 to hit, reach 5 ft., one target. <em>Hit:</em> [[/damage 4d6 type=piercing average=true]] damage.</p>\n</section>\nThe [[lookup @name]] attacks with its [[lookup @item.name]].\n</div>",
          "chat": ""
        },
        "source": {
          "book": "Monster Manual",
          "page": "316",
          "custom": "",
          "license": ""
        },
        "identified": true,
        "unidentified": {
          "description": ""
        },
        "container": null,
        "quantity": 1,
        "weight": 0,
        "price": {
          "value": 0,
          "denomination": "gp"
        },
        "rarity": "",
        "attunement": 0,
        "equipped": true,
        "activation": {
          "type": "action",
          "cost": 1,
          "condition": ""
        },
        "duration": {
          "value": "",
          "units": "inst"
        },
        "cover": null,
        "crewed": false,
        "target": {
          "value": null,
          "width": null,
          "units": "",
          "type": "",
          "prompt": true
        },
        "range": {
          "value": 5,
          "long": null,
          "units": "ft"
        },
        "uses": {
          "value": null,
          "max": "",
          "per": null,
          "recovery": "",
          "prompt": true
        },
        "consume": {
          "type": "",
          "target": null,
          "amount": null,
          "scale": false
        },
        "ability": "str",
        "actionType": "mwak",
        "attack": {
          "bonus": "",
          "flat": false
        },
        "chatFlavor": "",
        "critical": {
          "threshold": null,
          "damage": ""
        },
        "damage": {
          "parts": [
            [
              "4d6[piercing]",
              "piercing"
            ]
          ],
          "versatile": ""
        },
        "formula": "",
        "save": {
          "dc": null,
          "ability": "",
          "scaling": "flat"
        },
        "summons": null,
        "armor": {
          "value": null
        },
        "hp": {
          "value": null,
          "max": null,
          "dt": null,
          "conditions": ""
        },
        "type": {
          "value": "natural",
          "baseItem": ""
        },
        "magicalBonus": null,
        "properties": [],
        "proficient": 1
      },
      "effects": [],
      "flags": {
        "ddbimporter": {
          "levelBonus": false,
          "dndbeyond": {}
        },
        "monsterMunch": {
          "titleHTML": "<strong>Bite.</strong>",
          "fullName": "Bite.",
          "actionCopy": false,
          "type": "action",
          "actionInfo": {
            "damage": {
              "parts": [
                [
                  "4d6[piercing]",
                  "piercing"
                ]
              ],
              "versatile": ""
            },
            "baseAbility": "str",
            "toHit": 3,
            "proficient": true,
            "extraAttackBonus": 0
          }
        },
        "midi-qol": {
          "removeAttackDamageButtons": "default"
        },
        "midiProperties": {
          "confirmTargets": "default"
        }
      },
      "img": "icons/creatures/abilities/mouth-teeth-long-red.webp",
      "folder": null,
      "sort": 0,
      "ownership": {
        "default": 0
      },
      "_stats": {
        "systemId": null,
        "systemVersion": null,
        "coreVersion": null,
        "createdTime": null,
        "modifiedTime": null,
        "lastModifiedBy": null
      },
      "_key": "!actors.items!qzIFmFRMzqJdztfv.wICxeFYNoovI4DA2"
    },
    {
      "_id": "gMAvnSWFisGAWJrd",
      "name": "Eye Ray",
      "type": "feat",
      "system": {
        "description": {
          "value": "<div class=\"ddb\">\n<section class=\"secret\">\n<p> The zombie uses a random magical eye ray, choosing a target that it can see within 60 feet of it.</p><p><em>1. Paralyzing Ray.</em> The targeted creature must succeed on a [[/save con 14 format=long]] or be &amp;Reference[paralyzed]{paralyzed} for 1 minute. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success.</p><p><em>2. Fear Ray.</em> The targeted creature must succeed on a [[/save wis 14 format=long]] or be &amp;Reference[frightened]{frightened} for 1 minute. The target can repeat the saving throw at the end of each of its turns, ending the effect on itself on a success.</p><p><em>3. Enervation Ray.</em> The targeted creature must make a [[/save con 14 format=long]], taking [[/damage 8d8 type=necrotic average=true]] damage on a failed save, or half as much damage on a successful one.</p><p><em>4. Disintegration Ray.</em> If the target is a creature, it must succeed on a [[/save dex 14 format=long]] or take [[/damage 10d8 type=force average=true]] damage. If this damage reduces the creature to 0 hit points, its body becomes a pile of fine gray dust.</p><p>If the target is a Large or smaller nonmagical object or creation of magical &amp;Reference[force]{force}, it is disintegrated without a saving throw. If the target is a Huge or larger nonmagical object or creation of magical &amp;Reference[force]{force}, this ray disintegrates a 10-foot &amp;Reference[cube]{cube} of it.</p>\n</section>\nThe [[lookup @name]] uses [[lookup @item.name]] and a save is required.\n</div>",
          "chat": ""
        },
        "source": {
          "book": "Monster Manual",
          "page": "316",
          "custom": "",
          "license": ""
        },
        "activation": {
          "type": "action",
          "cost": 1,
          "condition": ""
        },
        "duration": {
          "units": "round",
          "value": "10"
        },
        "cover": null,
        "crewed": false,
        "target": {
          "value": 1,
          "width": null,
          "units": "",
          "type": "creature",
          "prompt": true
        },
        "range": {
          "value": 60,
          "long": null,
          "units": "ft"
        },
        "uses": {
          "value": null,
          "max": "",
          "per": null,
          "recovery": "",
          "prompt": true
        },
        "consume": {
          "type": "",
          "target": null,
          "amount": null,
          "scale": false
        },
        "ability": null,
        "actionType": "other",
        "attack": {
          "bonus": "",
          "flat": false
        },
        "chatFlavor": "",
        "critical": {
          "threshold": null,
          "damage": ""
        },
        "damage": {
          "parts": [],
          "versatile": ""
        },
        "formula": "",
        "save": {
          "dc": null,
          "ability": "",
          "scaling": "spell"
        },
        "summons": null,
        "type": {
          "value": "monster",
          "subtype": ""
        },
        "properties": [],
        "requirements": "",
        "recharge": {
          "value": null,
          "charged": false
        }
      },
      "effects": [],
      "flags": {
        "ddbimporter": {
          "levelBonus": false,
          "dndbeyond": {},
          "effectsApplied": true
        },
        "monsterMunch": {
          "titleHTML": "<strong>Eye Ray.</strong>",
          "fullName": "Eye Ray.",
          "actionCopy": false,
          "type": "action",
          "actionInfo": {
            "damage": {
              "parts": [
                [
                  "8d8[necrotic]",
                  "necrotic"
                ]
              ],
              "versatile": "10d8[force]"
            },
            "baseAbility": null,
            "toHit": 0,
            "proficient": false,
            "extraAttackBonus": 0
          }
        },
        "midiProperties": {
          "halfdam": true,
          "saveDamage": "halfdam",
          "confirmTargets": "default",
          "fulldam": true,
          "magiceffect": true
        },
        "midi-qol": {
          "removeAttackDamageButtons": "default",
          "forceCEOff": true,
          "onUseMacroName": "[postActiveEffects]ItemMacro"
        },
        "dae": {
          "macro": {
            "name": "Eye Ray",
            "type": "script",
            "scope": "global",
            "command": "\nconst rayChoices = DDBImporter.EffectHelper.extractListItems(args[0].itemData.system.description.value);\nconst workflow = args[0].workflow;\n\nfunction confusionRayEffect(document) {\n  let effect = DDBImporter.EffectHelper.baseEffect(document, document.name, { transfer: false, disabled: false });\n  effect.changes.push(\n    { key: \"system.attributes.movement.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: \"* 0\", priority: \"20\" },\n    {\n      key: \"macro.CE\",\n      mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM,\n      value: \"Reaction\",\n      priority: \"20\"\n    },\n  );\n  foundry.utils.setProperty(effect, \"flags.dae.specialDuration\", [\"turnEnd\"]);\n  effect.duration.rounds = 2;\n  effect.duration.seconds = 12;\n\n  document.effects.push(effect);\n}\n\nfunction slowingRayEffect(document, dc, saveAbility) {\n  let effect = DDBImporter.EffectHelper.baseEffect(document, document.name, { transfer: false, disabled: false });\n  effect.changes.push(\n    { key: \"system.attributes.movement.all\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: \"/2\", priority: \"20\" },\n    {\n      key: \"flags.midi-qol.OverTime\",\n      mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n      value: `turn=end,label=Slow Ray (End of Turn),saveRemove=true,saveDC=${dc},saveAbility=${saveAbility},killAnim=true`,\n      priority: \"20\"\n    },\n    {\n      key: \"macro.CE\",\n      mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM,\n      value: \"Reaction\",\n      priority: \"20\"\n    },\n  );\n  effect.duration.seconds = 60;\n  document.effects.push(effect);\n}\n\nfunction damageRayEffect(document, nodamageSave = false) {\n  const dmg = DDBImporter.EffectHelper.getMonsterFeatureDamage(document.system.description.value, document);\n\n  if (nodamageSave) {\n    foundry.utils.setProperty(document, \"flags.midiProperties.saveDamage\", \"nodam\");\n  } else {\n    foundry.utils.setProperty(document, \"flags.midiProperties.saveDamage\", \"halfdam\");\n    foundry.utils.setProperty(document, \"flags.midiProperties.halfdam\", true);\n  }\n  foundry.utils.setProperty(document, \"flags.midiProperties.magicdam\", true);\n\n  if (dmg) {\n    document.system.damage.parts = dmg.parts;\n  }\n}\n\n\nfunction DisintegrationRayEffect(document) {\n\n}\n\nfunction telekineticRayEffect(document) {\n  const effect = DDBImporter.EffectHelper.baseEffect(document, document.name, { transfer: false, disabled: false });\n  DDBImporter.EffectHelper.addStatusEffectChange(effect, \"Restrained\");\n  foundry.utils.setProperty(effect, \"flags.dae.specialDuration\", [\"turnStartSource\"]);\n  effect.duration.rounds = 2;\n  effect.duration.seconds = 12;\n  document.effects.push(effect);\n}\n\nasync function sleepRayEffect(document) {\n  await DDBImporter.lib.DDBMacros.setItemMacroFlag(document, \"monsterFeature\", \"sleep.js\");\n  DDBImporter.lib.DDBMacros.setMidiOnUseMacroFlag(document, \"monsterFeature\", \"sleep.js\", [\"postActiveEffects\"]);\n}\n\nasync function petrificationRayEffect(document) {\n  const effect = DDBImporter.EffectHelper.baseEffect(document, document.name, { transfer: false, disabled: false });\n  await DDBImporter.lib.DDBMacros.setItemMacroFlag(document, \"monsterFeature\", \"petrification.js\");\n  effect.changes.push(DDBImporter.lib.DDBMacros.generateMacroChange({ macroType: \"monsterFeature\", macroName: \"petrification.js\" }));\n  effect.duration.rounds = 2;\n  effect.duration.seconds = 12;\n  foundry.utils.setProperty(effect, \"flags.dae.macroRepeat\", \"endEveryTurn\");\n  document.effects.push(effect);\n}\n\nasync function attackWithRay(documentData, target) {\n  // console.warn(\"ATTACK RAY\", {\n  //   documentData: foundry.utils.deepClone(documentData),\n  // })\n  const rayItem = new CONFIG.Item.documentClass(documentData, { parent: workflow.actor });\n  const [config, options] = DDBImporter.EffectHelper.syntheticItemWorkflowOptions({ targets: (target?.uuid ? [ target.uuid ] : args[0].targetUuids) });\n\n  // console.warn(\"Midi Options Final\", {\n  //   documentData,\n  //   options,\n  //   rayItem,\n  //   target,\n  // });\n  return await MidiQOL.completeItemUse(rayItem, config, options);\n}\n\nasync function createBaseRay(rayName, { description, saveAbility = \"\", saveDC = null }) {\n  const rayData = foundry.utils.duplicate(workflow.item);\n  delete rayData.effects;\n  delete rayData._id;\n  delete rayData.flags[\"midi-qol\"].onUseMacroName;\n  delete rayData.flags[\"midi-qol\"].onUseMacroParts;\n  if (foundry.utils.hasProperty(rayData, \"flags.itemacro\")) delete rayData.flags.itemacro;\n  if (foundry.utils.hasProperty(rayData, \"flags.dae.macro\")) delete rayData.flags.dae.macro;\n  rayData.name = rayName;\n  rayData.system.save.ability = saveAbility;\n  rayData.system.description.value = description;\n  rayData.system.description.chat = \"\";\n  rayData.system.duration.units = \"inst\";\n  rayData.effects = [];\n\n  const overTimeEffects = DDBImporter.EffectHelper.generateOverTimeEffect(workflow.actor, rayData);\n\n  if (rayName === \"Slowing Ray\") {\n    slowingRayEffect(rayData, saveDC, saveAbility);\n  } else if ([\"Enervation Ray\", \"Wounding Ray\"].includes(rayName)) {\n    damageRayEffect(rayData, false);\n  } else if ([\"Disintegration Ray\", \"Death Ray\"].includes(rayName)) {\n    damageRayEffect(rayData, true);\n  } else if (rayName === \"Telekinetic Ray\") {\n    telekineticRayEffect(rayData);\n  } else if (rayName === \"Sleep Ray\") {\n    await sleepRayEffect(rayData);\n  } else if (rayName === \"Petrification Ray\") {\n    await petrificationRayEffect(rayData);\n  } else if (rayName === \"Confusion Ray\") {\n    confusionRayEffect(rayData);\n  }\n\n  console.warn(\"Base Ray\", {\n    rayData,\n    overTimeEffects,\n    lastArg: args[0],\n    workflow,\n  });\n  return rayData;\n}\n\n\n// number: index + 1,\n// title: title.textContent,\n// content: content.innerHTML ?? content.wholeText ?? content.textContent,\n// full: item.innerHTML,\n\n\nasync function getRandomRayNumber() {\n  const roll = new Roll(`1d${rayChoices.length}`);\n  await roll.evaluate({ async: true });\n  return roll.total;\n}\n\nasync function randomRayButtonCallback(results, _html) {\n  const num = await getRandomRayNumber();\n  results.results[1] = num;\n  return results;\n}\n\nconst results = [];\nfor (const target of args[0].targets) {\n\n  const rayChooser = await DDBImporter.DialogHelper.ChooserDialog.Ask(\n    [{\n      type: \"label\",\n      label: `Ray for ${target.name}`,\n      },\n      {\n      type: 'select',\n      label: 'Choose a ray...',\n      options: rayChoices.map((t) => ({ label: `${t.number} - ${t.title}`, value: t.number })),\n    }],\n    [{\n      label: \"Select\",\n      value: \"choice\",\n    }, {\n      label: \"Random\",\n      value: \"random\",\n      callback: randomRayButtonCallback,\n    }, {\n      label: \"Cancel\",\n      value: \"cancel\",\n    }],\n    {\n      title: 'Eye Rays',\n      options: {\n        width: 450,\n        height: \"auto\",\n      },\n      defaultButton: \"Random\",\n    }\n  );\n\n\n  // console.warn(rayChooser);\n\n  if (!rayChooser.success) continue;\n\n  const rayChoice = rayChoices.find((r) => r.number === rayChooser.results[1]);\n\n  if (!rayChoice) {\n    console.warn(\"Unable to determine Ray Choice\", { rayChooser, rayChoices, target });\n    continue;\n  }\n\n  let save = rayChoice.content.match(/DC (?<dc>[0-9]+) (?<ability>.*?) saving throw|\\(save DC (?<dc_only>[0-9]+)\\)/);\n\n  if (!save) {\n    save = rayChoice.content.match(/\\[\\/save (?<ability>\\w+) (?<dc>\\d\\d)/);\n  }\n\n  // console.warn(\"SAVE\", save);\n\n  const ray = await createBaseRay(rayChoice.title, {\n    description: rayChoice.full,\n    saveAbility: save && save.groups[\"ability\"] ? save.groups[\"ability\"].toLowerCase().substr(0, 3) : \"\",\n    saveDC: save && save.groups[\"dc\"]\n      ? save.groups[\"dc\"]\n      : save && save.groups[\"dc_only\"]\n         ? save.groups[\"dc_only\"]\n         : \"\",\n    target,\n  });\n\n\n  results.push(await attackWithRay(ray, target));\n}\n\nreturn results;\n"
          }
        }
      },
      "img": "icons/magic/perception/eye-tendrils-web-purple.webp",
      "folder": null,
      "sort": 0,
      "ownership": {
        "default": 0
      },
      "_stats": {
        "systemId": null,
        "systemVersion": null,
        "coreVersion": null,
        "createdTime": null,
        "modifiedTime": null,
        "lastModifiedBy": null
      },
      "_key": "!actors.items!qzIFmFRMzqJdztfv.gMAvnSWFisGAWJrd"
    },
    {
      "_id": "Fe7YZOcf69lxYIpM",
      "name": "Undead Fortitude",
      "type": "feat",
      "system": {
        "description": {
          "value": "<div class=\"ddb\">\n<section class=\"secret\">\n<p><em><strong>&amp;Reference[undead]{Undead} Fortitude.</strong></em> If damage reduces the zombie to 0 hit points, it must make a &amp;Reference[con]{Constitution} saving throw with a DC of 5 + the damage taken, unless the damage is &amp;Reference[radiant]{radiant} or from a critical hit. On a success, the zombie drops to 1 hit point instead.</p>\n</section>\nThe [[lookup @name]] uses [[lookup @item.name]].\n</div>",
          "chat": ""
        },
        "source": {
          "book": "Monster Manual",
          "page": "316",
          "custom": "",
          "license": ""
        },
        "activation": {
          "cost": null,
          "type": "",
          "condition": ""
        },
        "duration": {
          "value": "",
          "units": ""
        },
        "cover": null,
        "crewed": false,
        "target": {
          "value": null,
          "width": null,
          "units": "",
          "type": "",
          "prompt": true
        },
        "range": {
          "value": null,
          "long": null,
          "units": ""
        },
        "uses": {
          "value": null,
          "max": "",
          "per": null,
          "recovery": "",
          "prompt": true
        },
        "consume": {
          "type": "",
          "target": null,
          "amount": null,
          "scale": false
        },
        "ability": null,
        "actionType": null,
        "attack": {
          "bonus": "",
          "flat": false
        },
        "chatFlavor": "",
        "critical": {
          "threshold": null,
          "damage": ""
        },
        "damage": {
          "parts": [],
          "versatile": ""
        },
        "formula": "",
        "save": {
          "dc": null,
          "ability": "",
          "scaling": "flat"
        },
        "summons": null,
        "type": {
          "value": "monster",
          "subtype": ""
        },
        "properties": [],
        "requirements": "",
        "recharge": {
          "value": null,
          "charged": false
        }
      },
      "effects": [],
      "flags": {
        "ddbimporter": {
          "levelBonus": false,
          "dndbeyond": {}
        },
        "monsterMunch": {
          "titleHTML": "<em><strong>Undead Fortitude.</strong></em>",
          "fullName": "Undead Fortitude.",
          "actionCopy": false,
          "type": "special",
          "actionInfo": {
            "damage": {
              "parts": [],
              "versatile": ""
            },
            "baseAbility": null,
            "toHit": 0,
            "proficient": false,
            "extraAttackBonus": 0
          }
        },
        "midi-qol": {
          "removeAttackDamageButtons": "default"
        },
        "midiProperties": {
          "confirmTargets": "default"
        }
      },
      "img": "icons/magic/death/skull-horned-goat-pentagram-red.webp",
      "folder": null,
      "sort": 0,
      "ownership": {
        "default": 0
      },
      "_stats": {
        "systemId": null,
        "systemVersion": null,
        "coreVersion": null,
        "createdTime": null,
        "modifiedTime": null,
        "lastModifiedBy": null
      },
      "_key": "!actors.items!qzIFmFRMzqJdztfv.Fe7YZOcf69lxYIpM"
    }
  ],
  "effects": [],
  "folder": "X3EBPxX15km9gqjD",
  "sort": 0,
  "ownership": {
    "default": 0,
    "6yhz13iFYYklKtgA": 3
  },
  "flags": {
    "dnd5e": {},
    "monsterMunch": {
      "url": "https://www.dndbeyond.com/monsters/17111-beholder-zombie",
      "img": "https://www.dndbeyond.com/avatars/30836/799/638063944708081396.png",
      "tokenImg": "https://www.dndbeyond.com/avatars/8/629/636313049146334815.jpeg",
      "isStockImg": false,
      "spellList": {
        "class": [],
        "pact": [],
        "atwill": [],
        "innate": [],
        "edgeCases": [],
        "material": true,
        "innateMatch": false
      },
      "overTime": [
        "Eye Ray"
      ]
    },
    "ddbimporter": {
      "id": 17111,
      "entityTypeId": 779871897,
      "creatureGroupId": null,
      "creatureFlags": [],
      "version": "5.1.27",
      "isLegacy": false,
      "flatAC": false
    }
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.1.2",
    "coreVersion": "11.315",
    "createdTime": 1721275235111,
    "modifiedTime": 1721275235111,
    "lastModifiedBy": "6yhz13iFYYklKtgA"
  },
  "_key": "!actors!qzIFmFRMzqJdztfv"
}
