{
  "name": "Javelin of Lightning",
  "type": "weapon",
  "system": {
    "description": {
      "value": "<div class=\"ddb\">\n<p>This javelin is a magic weapon. When you hurl it and speak its command word, it transforms into a bolt of &amp;Reference[lightning]{lightning}, forming a &amp;Reference[line]{line} 5 feet wide that extends out from you to a target within 120 feet. Each creature in the &amp;Reference[line]{line} excluding you and the target must make a [[/save dex 13 format=long]], taking 4d6 &amp;Reference[lightning]{lightning} damage on a failed save, and half as much damage on a successful one. The &amp;Reference[lightning]{lightning} bolt turns back into a javelin when it reaches the target. Make a ranged weapon attack against the target. On a hit, the target takes damage from the javelin plus 4d6 &amp;Reference[lightning]{lightning} damage.</p>\n<p>The javelin's property can't be used again until the next dawn. In the meantime, the javelin can still be used as a magic weapon.</p>\n</div>",
      "chat": ""
    },
    "source": {
      "book": "Playerâ€™s Handbook",
      "page": "178",
      "license": "",
      "custom": ""
    },
    "identified": true,
    "unidentified": {
      "description": ""
    },
    "container": null,
    "quantity": 1,
    "weight": 2,
    "price": {
      "value": 0,
      "denomination": "gp"
    },
    "rarity": "uncommon",
    "attunement": 0,
    "equipped": false,
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": "",
      "units": ""
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "",
      "prompt": true
    },
    "range": {
      "value": 30,
      "long": 120,
      "units": "ft"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": "",
      "prompt": true
    },
    "consume": {
      "type": "",
      "target": null,
      "amount": null,
      "scale": false
    },
    "ability": "",
    "actionType": "mwak",
    "attack": {
      "bonus": "",
      "flat": false
    },
    "chatFlavor": "Roll Other damage: [4d6] On Hit or DC 13 Dexterity Save for Half Damage",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [
        [
          "1d6[piercing] + @mod",
          "piercing"
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "summons": null,
    "armor": {
      "value": null
    },
    "hp": {
      "value": null,
      "max": null,
      "dt": null,
      "conditions": ""
    },
    "type": {
      "value": "simpleM",
      "baseItem": "javelin"
    },
    "magicalBonus": null,
    "properties": [
      "thr",
      "mgc"
    ],
    "proficient": 0
  },
  "flags": {
    "ddbimporter": {
      "dndbeyond": {
        "type": "Javelin",
        "damage": {
          "parts": []
        },
        "classFeatures": [],
        "ability": "str",
        "restrictions": [
          "On Hit or DC 13 Dexterity Save for Half Damage"
        ],
        "avatarUrl": "https://www.dndbeyond.com/avatars/19/248/636382372760534405.jpeg",
        "largeAvatarUrl": "https://www.dndbeyond.com/avatars/7/275/636284746259121503.jpeg",
        "filterType": "Weapon",
        "isConsumable": false,
        "isContainer": false,
        "isCustomItem": false,
        "isHomebrew": false,
        "isMonkWeapon": true,
        "isPack": false,
        "levelInfusionGranted": null,
        "tags": [
          "Damage",
          "Combat"
        ],
        "sources": [
          {
            "sourceId": 1,
            "pageNumber": null,
            "sourceType": 2
          },
          {
            "sourceId": 2,
            "pageNumber": 178,
            "sourceType": 1
          }
        ],
        "pictureUrl": "https://www.dndbeyond.com/avatars/7/275/636284746259121503.jpeg"
      },
      "id": 0,
      "entityTypeId": 0,
      "definitionEntityTypeId": 112130694,
      "definitionId": 4667,
      "originalName": "Javelin of Lightning",
      "version": "5.1.27",
      "effectsApplied": true,
      "keepIcon": true
    },
    "midi-qol": {
      "removeAttackDamageButtons": "default",
      "effectCondition": "",
      "onUseMacroName": "[postActiveEffects]ItemMacro,[postDamageRoll]ItemMacro,[preAttackRoll]ItemMacro",
      "forceCEOff": true
    },
    "midiProperties": {
      "confirmTargets": "default"
    },
    "dae": {
      "macro": {
        "name": "Javelin of Lightning",
        "type": "script",
        "scope": "global",
        "command": "// based on a macro by @Chris#8375\nif ([\"on\", \"off\"].includes(args[0])) {\n  const lastArg = args[args.length - 1];\n  const tokenOrActor = await fromUuid(lastArg.actorUuid);\n  const targetActor = tokenOrActor.actor ? tokenOrActor.actor : tokenOrActor;\n  const item = targetActor.items.find((i) => i.name === args[1]);\n  if (item) {\n    if (args[0] === \"off\") await item.setFlag(\"world\", \"boltUsed\", false);\n    await item.setFlag(\"world\", \"useBolt\", false);\n  }\n  return;\n}\n\nconst workflow = args[0].workflow;\n\nif (workflow.targets.size === 0) return;\n\nasync function useBolt() {\n  return new Promise((resolve) => {\n    new Dialog({\n      title: \"Use Bolt of Lightning?\",\n      content: \"<p>Use Bolt of Lightning?</p>\",\n      buttons: {\n        yes: {\n          label: \"Yes\",\n          callback: async () => {\n            await workflow.item.setFlag(\"world\", \"useBolt\", true);\n            resolve(this);\n          },\n        },\n        no: {\n          label: \"No\",\n          callback: async () => {\n            resolve(this);\n          },\n        },\n      },\n    }).render(true);\n  });\n}\n\nif (args[0].macroPass === \"postActiveEffects\") {\n  if (!workflow.item.flags.world?.useBolt) return;\n  const targetToken = workflow.targets.first();\n  const sourceToken = workflow.token;\n  await workflow.item.setFlag(\"world\", \"boltUsed\", true);\n  const ray = new Ray(sourceToken.center, targetToken.center);\n  if (ray.distance === 0) return;\n  const templateData = {\n    angle: 0,\n    direction: Math.toDegrees(ray.angle),\n    distance: (ray.distance / canvas.scene.grid.size) * 5,\n    x: ray.A.x,\n    y: ray.A.y,\n    t: \"ray\",\n    user: game.user,\n    fillColor: game.user.color,\n    width: 5,\n    flags: {\n      tokenmagic: {\n        options: {\n          tmfxPreset: \"Shock\",\n          tmfxTextureAlpha: 0.5,\n        },\n      },\n    },\n  };\n  const changes = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [templateData]);\n  await DDBImporter?.EffectHelper.wait(500);\n  const templateDoc = changes[0];\n  // console.warn(\"TEMPLATE\", templateDoc);\n  const boltEffectData = {\n    label: `${workflow.item.name}: Bolt Template`,\n    name: `${workflow.item.name}: Bolt Template`,\n    icon: \"icons/magic/lightning/bolt-forked-large-blue-yellow.webp\",\n    changes: [\n      {\n        key: \"flags.dae.deleteUuid\",\n        mode: 5,\n        priority: 20,\n        value: templateDoc.uuid,\n      },\n    ],\n    duration: {\n      seconds: 1,\n    },\n  };\n  await await MidiQOL.socket().executeAsGM(\"createEffects\", {\n    actorUuid: sourceToken.actor.uuid,\n    effects: [boltEffectData],\n  });\n  const templateTokenIds = DDBImporter?.EffectHelper.findContainedTokensInTemplate(templateDoc) ?? [];\n\n  const targetTokens = [];\n  for (const i of templateTokenIds) {\n    if (i === sourceToken.id || i === targetToken.id) continue;\n    targetTokens.push(canvas.scene.tokens.get(i).uuid);\n  }\n\n  if (targetTokens.length > 0) {\n    const lightningBoltData = foundry.utils.duplicate(workflow.item);\n    delete lightningBoltData.effects;\n    delete lightningBoltData._id;\n    delete lightningBoltData.flags[\"midi-qol\"].onUseMacroName;\n    delete lightningBoltData.flags[\"midi-qol\"].onUseMacroParts;\n    if (foundry.utils.hasProperty(lightningBoltData, \"flags.itemacro\")) delete lightningBoltData.flags.itemacro;\n    if (foundry.utils.hasProperty(lightningBoltData, \"flags.dae.macro\")) delete lightningBoltData.flags.dae.macro;\n    lightningBoltData.name +=  \": Bolt\";\n    lightningBoltData.system.damage.parts = [[\"4d6[lightning]\", \"lightning\"]];\n    lightningBoltData.system.actionType = \"save\";\n    lightningBoltData.system.save.ability = \"dex\";\n    lightningBoltData.system.save.dc = 13;\n    lightningBoltData.system.save.scaling = \"flat\";\n    const areaSpell = new CONFIG.Item.documentClass(lightningBoltData, { parent: workflow.actor });\n    const [config, options] = DDBImporter.EffectHelper.syntheticItemWorkflowOptions({ targets: targetTokens });\n\n    // console.warn(\"Midi Options\", {\n    //   areaSpell,\n    //   options,\n    //   targetTokens,\n    //   lightningBoltData,\n    // })\n    await MidiQOL.completeItemUse(areaSpell, config, options);\n  }\n} else if (args[0].macroPass === \"postDamageRoll\") {\n  if (!workflow.item.flags.world?.useBolt) return;\n  const diceNum = workflow.isCritical ? 8 : 4;\n  const formula = `${workflow.damageRoll._formula} + ${diceNum}d6[lightning]`;\n  const damageRoll = await new CONFIG.Dice.DamageRoll(formula).roll({ async: true });\n  await workflow.setDamageRoll(damageRoll);\n} else if (args[0].macroPass === \"preAttackRoll\") {\n  if (workflow.item.getFlag(\"world\", \"boltUsed\")) return;\n  await useBolt();\n}\n"
      }
    }
  },
  "effects": [
    {
      "icon": "https://www.dndbeyond.com/avatars/19/248/636382372760534405.jpeg",
      "changes": [
        {
          "key": "macro.itemMacro",
          "value": "\"Javelin of Lightning\"",
          "mode": 0,
          "priority": 20
        }
      ],
      "duration": {
        "seconds": null,
        "startTime": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null,
        "combat": null
      },
      "tint": null,
      "transfer": false,
      "disabled": false,
      "flags": {
        "dae": {
          "transfer": true,
          "stackable": "noneName",
          "specialDuration": [
            "newDay",
            "longRest"
          ],
          "selfTarget": true,
          "selfTargetAlways": true
        },
        "ddbimporter": {
          "disabled": false
        },
        "midi-qol": {
          "forceCEOff": true
        },
        "core": {}
      },
      "name": "Javelin of Lightning: Used Effect Tracker",
      "statuses": [],
      "_id": "xt7Lzp7xM8f6EZi7",
      "description": "",
      "origin": null,
      "_key": "!items.effects!wMxhGFBWtaXCzH51.xt7Lzp7xM8f6EZi7"
    }
  ],
  "img": "https://www.dndbeyond.com/avatars/19/248/636382372760534405.jpeg",
  "folder": "gQrW7HzYTCPR2ZbF",
  "ownership": {
    "default": 0,
    "6yhz13iFYYklKtgA": 3
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.1.2",
    "coreVersion": "11.315",
    "createdTime": 1721268414865,
    "modifiedTime": 1721268414865,
    "lastModifiedBy": "6yhz13iFYYklKtgA"
  },
  "_id": "wMxhGFBWtaXCzH51",
  "sort": 0,
  "_key": "!items!wMxhGFBWtaXCzH51"
}
